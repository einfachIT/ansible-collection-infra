---

- name: Print all available facts
  ansible.builtin.debug:
    var: ansible_facts

- name: Install prerequisites
  ansible.builtin.apt:
    name: "{{ item }}"
    state: present
    update_cache: true
  loop:
    - rsync
    - sshpass
    - dnsmasq
    - tcpdump
    - nfs-kernel-server

- name: Create nfs and tftp boot directories
  ansible.builtin.file:
    path: "{{ item }}"
    state: directory
    mode: '0755'
  loop:
    - "{{ netboot_server_nfs_root }}"
    - "{{ netboot_server_tftp_root }}"

- name: Flush handlers
  ansible.builtin.meta: flush_handlers

- name: Configure dnsmask
  ansible.builtin.copy:
    dest: /etc/dnsmasq.conf
    content: |
      interface=eth0
      dhcp-range={{ netboot_server_dhcp_range }}
      log-dhcp
      enable-tftp
      tftp-root={{ netboot_server_tftp_root }}
      pxe-service=0,"Raspberry Pi Boot"
  notify:
    - Setup dnsmasq service

- name: Configure nfs exports
  ansible.builtin.copy:
    dest: /etc/exports
    content: |
      {{ netboot_server_data_dir }} *(rw,sync,no_subtree_check,no_root_squash,crossmnt)
      {{ netboot_server_nfs_root }} *(rw,sync,subtree_check,no_root_squash)
  notify:
    - Restart rpcbind
    - Restart nfs server

- name: Copy cli scripts
  ansible.builtin.template:
    src: "{{ item }}.j2"
    dest: "/usr/sbin/{{ item }}"
    owner: root
    group: root
    mode: '0744'
  loop:
    - piaas_image
    - piaas_instance

- name: Copy default custom.toml
  ansible.builtin.copy:
    src: "custom.toml"
    dest: "{{ netboot_server_config_root }}"

