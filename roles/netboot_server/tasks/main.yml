---

- name: Install prerequisites
  ansible.builtin.apt:
    name: "{{ item }}"
    state: present
    update_cache: true
  loop:
    - rsync
    - dnsmasq
    - tcpdump
    - nfs-kernel-server

- name: Create nfs and tftp boot directories
  ansible.builtin.file:
    path: "{{ item }}"
    state: directory
    mode: '0755'
  loop:
    - "{{ piaas_nfs_root }}"
    - "{{ piaas_nfs_root }}/upper"
    - "{{ piaas_nfs_root }}/work"
    - "{{ piaas_tftp_root }}"
    - "{{ piaas_images_root }}"


- name: Flush handlers
  ansible.builtin.meta: flush_handlers

- name: Configure dnsmasq
  ansible.builtin.lineinfile:
    path: /etc/dnsmasq.conf
    regexp: "{{ item.regexp }}" 
    line: "{{ item.line }}"
  loop:
    - regexp: "^dhcp-range="
      line: "dhcp-range={{ piaas_dhcp_range }}"
    - regexp: "^log-dhcp"
      line: "log-dhcp"
    - regexp: "^enable-tftp"
      line: "enable-tftp"
    - regexp: "^tftp-root="
      line: "tftp-root={{ piaas_tftp_root }}"
    - regexp: "^pxe-service="
      line: 'pxe-service=0,"Raspberry Pi Boot"'
  notify:
    - Setup dnsmasq service

- name: Configure nfs exports
  ansible.builtin.lineinfile:
    dest: /etc/exports
    line: "{{ item }}"
  loop:
    - "{{ piaas_data_dir }} *(rw,sync,no_root_squash,crossmnt)"
    - "{{ piaas_nfs_root }} *(rw,sync,no_root_squash,crossmnt)"
  notify:
    - Restart rpcbind
    - Restart nfs server

- name: Copy default custom.toml
  ansible.builtin.copy:
    src: "custom.toml"
    dest: "{{ piaas_config_root }}/"
    mode: 0644

- name: copy vnc script
  ansible.builtin.copy:
    src: "enable_vnc_access.sh"
    dest: "{{ piaas_config_root }}/"
    mode: 0744
