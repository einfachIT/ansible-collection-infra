---
- name: Get hostname
  ansible.builtin.command: hostname
  changed_when: false

- name: Install prerequisites
  ansible.builtin.apt:
    name:
      - git
      - libffi-dev
      - gcc
      - libssl-dev
      - python3-dev
      - python3-pip
      - python3-venv

- name: Install and upgrade pip
  ansible.builtin.pip:
    name: pip
    extra_args: --upgrade
    virtualenv: /opt/kolla-ansible/venv
    virtualenv_command: 'python3 -m venv'

- name: Install ansible
  ansible.builtin.pip:
    name: 'ansible>=4,<6'
    virtualenv: /opt/kolla-ansible/venv

- name: Install docker python modules
  ansible.builtin.pip:
    name: docker
    # virtualenv: /opt/kolla-ansible/venv

- name: Install kolla ansible
  ansible.builtin.pip:
    name: kolla-ansible
    # name: git+https://opendev.org/openstack/kolla-ansible@master
    virtualenv: /opt/kolla-ansible/venv

- name: Copy kolla ansible config
  ansible.builtin.copy:
    src: /opt/kolla-ansible/venv/share/kolla-ansible/etc_examples/kolla/
    dest: /etc/kolla
    mode: 0644
    directory_mode: 0755
    remote_src: true

- name: Install kolla-ansible dependencies
  ansible.builtin.shell:
    cmd: source /opt/kolla-ansible/venv/bin/activate && kolla-ansible install-deps
    executable: /bin/bash
    creates: /home/pi/.ansible/collections/ansible_collections/openstack/kolla/

- name: Create ansible config dir
  ansible.builtin.file:
    path: /etc/ansible
    mode: 0755
    owner: root
    group: root
    state: directory

- name: Configure ansible
  ansible.builtin.blockinfile:
    path: /etc/ansible/ansible.cfg
    create: true
    mode: 0644
    block: |
      [defaults]
      host_key_checking=False
      pipelining=True
      forks=100

- name: Generate passwords
  ansible.builtin.shell:
    cmd: source /opt/kolla-ansible/venv/bin/activate && kolla-genpwd
    executable: /bin/bash
    creates: ttt

- name: Configure kolla
  ansible.builtin.lineinfile:
    path: /etc/kolla/globals.yml
    line: "{{ item.line }}"
    regexp: "{{ item.regexp }}"
  loop:
    - { line: 'kolla_base_distro: "ubuntu"', regexp: "^#kolla_base_distro:" }
    - { line: 'kolla_install_type: "binary"', regexp: "^#kolla_install_type:" }
    - { line: 'docker_namespace: "kolla"', regexp: "^#docker_namespace:" }
    - { line: 'openstack_tag: "14.6.0"', regexp: "^#openstack_tag:" }
    - { line: 'network_interface: "wlan0"', regexp: "^#network_interface:" }
    - { line: 'neutron_external_interface: "eth0" ', regexp: "^#neutron_external_interface:" }
    - { line: 'kolla_internal_vip_address: "192.168.1.2"', regexp: "^#kolla_internal_vip_address:" }
    - { line: 'docker_registry: "docker-horst.local:5000"', regexp: "^#docker_registry:" }
    - { line: 'docker_registry_insecure: "yes"', regexp: "^#docker_registry_insecure:" }

- name: Bootstrap servers
  ansible.builtin.shell:
    cmd: |
      source /opt/kolla-ansible/venv/bin/activate && kolla-ansible -i \
      /opt/kolla-ansible/venv/share/kolla-ansible/ansible/inventory/all-in-one bootstrap-servers
    executable: /bin/bash
    creates: ttt

- name: Bugfix Dockerfiles for aarch64
  ansible.builtin.blockinfile:
    path: /opt/kolla-ansible/venv/share/kolla/docker/kolla-toolbox/Dockerfile.j2
    block: |
      RUN echo 'deb https://packages.erlang-solutions.com/ubuntu focal contrib' | sudo tee -a /etc/apt/sources.list \
          && curl -o erlang_solutions.asc  https://packages.erlang-solutions.com/ubuntu/erlang_solutions.asc \
          && sudo apt-key add erlang_solutions.asc
    insertbefore: ^.*macros.enable_extra_repos.*erlang.*openvswitch.*powertools.*rabbitmq.*$
    

- name: Build kolla arm container images
  ansible.builtin.shell:
    cmd: |
      source /opt/kolla-ansible/venv/bin/activate && pip install kolla==14.6.0 && \
      export DOCKER_HOST="tcp://docker-horst.local:2375" &&  \
      kolla-build -b ubuntu --skip-existing --registry docker-horst.local:5000 --push
    executable: /bin/bash
    creates: ttt
  async: 20800
  poll: 30

- name: Prechecks
  ansible.builtin.shell:
    cmd: |
      source /opt/kolla-ansible/venv/bin/activate && kolla-ansible -i \
      /opt/kolla-ansible/venv/share/kolla-ansible/ansible/inventory/all-in-one prechecks
    executable: /bin/bash
    creates: ttt

- name: Create docker config dir
  ansible.builtin.file:
    path: /etc/docker
    mode: 0755
    owner: root
    group: root
    state: directory

- name: Copy docker config
  ansible.builtin.copy:
    src: daemon.json
    dest: /etc/docker/daemon.json
    mode: 0644

- name: Deploy
  ansible.builtin.shell:
    cmd: |
      source /opt/kolla-ansible/venv/bin/activate && kolla-ansible -i \
      /opt/kolla-ansible/venv/share/kolla-ansible/ansible/inventory/all-in-one deploy
    executable: /bin/bash
    creates: ttt
  async: 20800
  poll: 30
